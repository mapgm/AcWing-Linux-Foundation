(0) 进入homework_0文件夹，然后：
    [1] 编写可执行shell脚本，文件名为mydu，使得在任意目录执行该脚本后，可以输出当前目录所占用的磁盘空间大小，格式化输出（例如 1K, 234M, 2G）。
    [2] 修改环境变量PATH，使得在任意目录下输入mydu均可执行上述脚本。

(1) 进入homework_1文件夹，然后：
    [1] 给当前目录下的所有文件添加可读权限。
    [2] 统计当前目录下共有多少个以.cpp结尾的文件，将结果写入ans.txt中。

(2) 进入homework_2文件夹，然后：
    [1] 统计当前目录下所有cpp文件的总行数，将结果写入ans1.txt中。
    [2] 遍历当前目录下所有py文件，统计共有多少行包含字符串thrift，将结果写入ans2.txt中。

(3) 进入homework_3文件夹，然后删除当前目录下的所有py文件。

(4) 进入homework_4文件夹，然后：
    [1] 当前目录下包含一个文件scores.txt，文件中有若干行数据，每行数据包含用空格隔开的3个字段：姓名、数学成绩、算法成绩。
    [2] 将scores.txt文件的内容以空格为分隔符分隔成3列，将第一列内容写入names.txt，第二列内容写入mathematics.txt，第三列内容写入algorithm.txt。
    注意：scores.txt文件本身不要修改。

(5) 进入homework_5文件夹，然后：
    [1] 当前目录下包含一个文件scores.txt，文件中有若干行数据，每行数据包含用空格隔开的3个字段：姓名、数学成绩、算法成绩。
    [2] 将scores.txt文件的内容以空格为分隔符分隔成3列，将第一列内容按字典序从小到大排序后写入names.txt。
    注意：scores.txt文件本身不要修改。

(6) 进入homework_6文件夹，然后将scores.txt文件的前5行写入top.txt，后4行写入bottom.txt。

(7) 进入homework_7文件夹，计算scores.txt文件的md5sum，将结果写入ans.txt。注意：ans.txt文件中只包含长度为32的md5sum，不包含其他内容。

(8) 进入homework_8文件夹，然后：
    [1] 将dir_a文件夹压缩为project_a.tar.gz。
    [2] 将project_b.tar.gz压缩文件解压到当前目录。
    注意：不要删除dir_a文件夹和project_b.tar.gz文件。

(9) 进入homework_9文件夹，然后计算 2112+3782112+378，将结果写入ans.txt中。
